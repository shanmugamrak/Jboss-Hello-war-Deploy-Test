name: Deploy WAR to JBoss

on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: list
        run : |
          cd ${{ github.workspace }}/dist
          ls -l helloworld.war
          chmod +r helloworld.war
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  
          
      - name: Deploy to WildFly
        env:
          WILDFLY_USERNAME: ${{ secrets.WILDFLY_USERNAME }}
          WILDFLY_PASSWORD: ${{ secrets.WILDFLY_PASSWORD }}
        run: |
          # Replace "YOUR_WAR_FILE.war" with your actual WAR file name
          WAR_FILE= ${{ github.workspace }}/dist/helloworld.war

          # Replace "AWS_PUBLIC_IP" and "WILDFLY_PORT" with your AWS Ubuntu instance's public IP and JBoss WildFly port (e.g., 8080)
          WILDFLY_URL="http://13.234.120.105:8080/management"

          # Replace "WILDFLY_MANAGEMENT_USER" and "WILDFLY_MANAGEMENT_PASSWORD" with your JBoss WildFly management console credentials
          WILDFLY_MANAGEMENT_USER="${WILDFLY_USERNAME}"
          WILDFLY_MANAGEMENT_PASSWORD="${WILDFLY_PASSWORD}"

          # Upload the WAR file to WildFly deployment directory
          curl -u "${WILDFLY_MANAGEMENT_USER}:${WILDFLY_MANAGEMENT_PASSWORD}" \
            -F "file=@${WAR_FILE}" \
            "${WILDFLY_URL}/add-content"

          # Trigger the deployment of the uploaded WAR file
          curl -u "${WILDFLY_MANAGEMENT_USER}:${WILDFLY_MANAGEMENT_PASSWORD}" \
            -d "content=${WAR_FILE}&operation=deploy" \
            "${WILDFLY_URL}/content"
