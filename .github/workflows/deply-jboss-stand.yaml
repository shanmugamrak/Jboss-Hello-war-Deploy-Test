name: Deploy WAR to JBoss

on:
  workflow_dispatch:
  #push:
   # branches:
    #  - master
env:
  GITHUB_TOKEN: ${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}
  JBOSS_ENDPOINT: 3.110.117.134
  JBOSS_PORT: 9990
  JBOSS_USERNAME: jbadmin
  JBOSS_PASSWORD: Ridhanya@2015
  APPLICATION_NAME: jboss-as-helloworld #helloworld
  WAR_PATH: './dist' #${{ github.workspace }}/dist #shanmugamrak/Jboss-Hello-war-Deploy-Test/dist
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'   
          
     
     #- name: login to JBoss
        #env:
          #JBOSS_ENDPOINT: ${{ secrets.JBOSS_ENDPOINT }} #http://127.0.0.1:9990 #${{ vars.JBOSS_ENDPOINT }}
          #JBOSS_USERNAME: ${{ secrets.JBOSS_USERNAME }} #jbadmin
          #JBOSS_PASSWORD: ${{ secrets.JBOSS_PASSWORD }} #Ridhanya@2015
          #WAR_PATH: ./dist/helloworld.war
          
      - name: Deploy WAR to WildFly
        run: |
          curl -F "file=@${WAR_PATH}" -u "${JBOSS_USERNAME}:${JBOSS_PASSWORD}" "http://${JBOSS_ENDPOINT}:${JBOSS_PORT}/management/domain/servers/server-one/deployment/${APPLICATION_NAME}.war?operation=upload"

      #- name: Redeploy the application
       # run: |
        #  curl -X POST -u "${JBOSS_USERNAME}:${JBOSS_PASSWORD}" "http://${JBOSS_ENDPOINT}:${JBOSS_PORT}/management/domain/servers/server-one/deployment/${APPLICATION_NAME}.war?operation=redeploy"        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
           #curl -u $JBOSS_USERNAME:$JBOSS_PASSWORD -X POST -H "Content-Type: application/octet-stream" --data-binary @$WAR_PATH $JBOSS_ENDPOINT/management/upload
          
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         #curl -u "$JBOSS_USERNAME:$JBOSS_PASSWORD" -X PUT "$JBOSS_ENDPOINT/your-app" --data-binary "@$WAR_PATH"
          #curl -u $JBOSS_USERNAME:$JBOSS_PASSWORD -X POST \ -H "Content-Type: application/octet-stream" \ --data-binary @$WAR_PATH \ $JBOSS_ENDPOINT/management/upload          
  
          #curl -u -D JBOSS_USERNAME=$JBOSS_USERNAME -D JBOSS_PASSWORD=$JBOSS_PASSWORD -T $WAR_PATH $JBOSS_ENDPOINT/management-webapp/undeploy?name=$($WAR_PATH)
          #sleep 5
          #curl -u -D JBOSS_USERNAME=$JBOSS_USERNAME -D JBOSS_PASSWORD=$JBOSS_PASSWORD -T $WAR_PATH $JBOSS_ENDPOINT/management-webapp/deploy?name=$($WAR_PATH)          
          
        #  shell: powershell   
                
          
      #- name: Deploy to JBoss Cloud
       # run: |
          # Replace the following placeholders with actual deployment commands
          # and the necessary JBoss cloud configuration
        #  export JBOSS_CLOUD_USERNAME=${{ secrets.JBOSS_USERNAME }}
         # export JBOSS_CLOUD_PASSWORD=${{ secrets.JBOSS_PASSWORD }}
          #export JBOSS_CLOUD_URL=${{ vars.JBOSS_ENDPOINT }}
          #export WAR_FILE_PATH= dist/helloworld.war
          
          # Use the appropriate deployment tool or method
          # For example, using `curl` to upload the WAR file
         # curl -u "$JBOSS_CLOUD_USERNAME:$JBOSS_CLOUD_PASSWORD" -X PUT "$JBOSS_CLOUD_URL/your-app" --data-binary "@$WAR_FILE_PATH"
          #curl -u $JBOSS_CLOUD_USERNAME:$JBOSS_CLOUD_PASSWORD -X POST \ -H "Content-Type: application/octet-stream" \ --data-binary @$WAR_FILE_PATH \ $JBOSS_CLOUD_URL/management/upload          
          

          #curl -u -DJBOSS_CLOUD_USERNAME=$JBOSS_CLOUD_USERNAME -DJBOSS_CLOUD_PASSWORD=$JBOSS_PASSWORD -T $WAR_FILE_PATH $JBOSS_CLOUD_URL/management-webapp/undeploy?name=$($WAR_FILE_PATH)
          #sleep 5
          #curl -u -DJBOSS_CLOUD_USERNAME=$JBOSS_CLOUD_USERNAME -DJBOSS_CLOUD_PASSWORD=$JBOSS_PASSWORD -T $WAR_FILE_PATH $JBOSS_CLOUD_URL/management-webapp/deploy?name=$($WAR_FILE_PATH)
   

          
      #- name: Deploy to JBoss
       # run: |
        #  # Adjust these variables to match your JBoss server credentials and URL
         # JBOSS_ENDPOINT=${{ secrets.JBOSS_ENDPOINT }}
          #JBOSS_USERNAME=${{ secrets.JBOSS_USERNAME }}
          #JBOSS_PASSWORD=${{ secrets.JBOSS_PASSWORD }}
          #WAR_FILE_PATH= ./dist/helloworld.war  # Adjust the path to your generated WAR file

          #curl -u $JBOSS_USERNAME:$JBOSS_PASSWORD -X POST \ -H "Content-Type: application/octet-stream" \ --data-binary @$WAR_FILE_PATH \ $JBOSS_ENDPOINT/management/upload          
          
                  
       
      #- name: Deploy to Jboss
       # run: |
        #  curl -u -DJBOSS_USERNAME=$JBOSS_USERNAME -DJBOSS_PASSWORD=$JBOSS_PASSWORD -T $WAR_PATH $JBOSS_ENDPOINT/management-webapp/undeploy?name=$($WAR_PATH)
         # sleep 5
          #curl -u -DJBOSS_USERNAME=$JBOSS_USERNAME -DJBOSS_PASSWORD=$JBOSS_PASSWORD -T $WAR_PATH $JBOSS_ENDPOINT/management-webapp/deploy?name=$($WAR_PATH)
          
          
        
#          DEPLOY_DIR=$(mktemp -d)
#          cp $WAR_PATH $DEPLOY_DIR/
#          JBOSS_CLI=$DEPLOY_DIR/jboss-cli.sh
#          echo "embed-server --admin-only=true" > $JBOSS_CLI
#          echo "deploy $DEPLOY_DIR/$(basename $WAR_PATH)" >> $JBOSS_CLI
#          echo "exit" >> $JBOSS_CLI
#          $JBOSS_CLI --connect --controller=$JBOSS_ENDPOINT --user=$JBOSS_USERNAME --password=$JBOSS_PASSWORD
#          rm -rf $DEPLOY_DIR
